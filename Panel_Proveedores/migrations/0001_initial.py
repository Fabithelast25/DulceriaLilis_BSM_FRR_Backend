# Generated by Django 5.2.7 on 2025-10-20 18:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Panel_Productos', '0002_alter_categoria_nombre_alter_unidadmedida_nombre'),
    ]

    operations = [
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rut_nif', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Use RUT (12345678-9 o 12345678-K) o un NIF alfanumérico válido (5–20 chars, sin espacios).', regex='^(\\d{7,8}-[0-9Kk]|[A-Za-z0-9.\\-\\/]{5,20})$')], verbose_name='RUT / NIF')),
                ('razon_social', models.CharField(max_length=255)),
                ('nombre_fantasia', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('telefono', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='El teléfono debe tener 8 a 15 dígitos y opcionalmente un + al inicio.', regex='^\\+?\\d{8,15}$')])),
                ('sitio_web', models.URLField(blank=True, null=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('ciudad', models.CharField(blank=True, max_length=128, null=True, validators=[django.core.validators.RegexValidator(message="Solo letras, espacios y .'- (mínimo 2 caracteres).", regex="^[A-Za-zÁÉÍÓÚÜÑáéíóúüñ .'-]{2,}$")])),
                ('pais', models.CharField(default='Chile', max_length=64, validators=[django.core.validators.RegexValidator(message="Solo letras, espacios y .'- (mínimo 2 caracteres).", regex="^[A-Za-zÁÉÍÓÚÜÑáéíóúüñ .'-]{2,}$")])),
                ('condiciones_pago', models.CharField(choices=[('CONTADO', 'Contado'), ('15D', '15 días'), ('30D', '30 días'), ('45D', '45 días'), ('60D', '60 días'), ('TRANSFERENCIA', 'Transferencia inmediata')], default='30D', max_length=120)),
                ('moneda', models.CharField(choices=[('CLP', 'Peso Chileno (CLP)'), ('USD', 'Dólar (USD)'), ('EUR', 'Euro (EUR)')], default='CLP', max_length=8)),
                ('contacto_principal_nombre', models.CharField(blank=True, max_length=120, null=True)),
                ('contacto_principal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contacto_principal_telefono', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='El teléfono debe tener 8 a 15 dígitos y opcionalmente un + al inicio.', regex='^\\+?\\d{8,15}$')])),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BLOQUEADO', 'Bloqueado')], default='ACTIVO', max_length=10)),
                ('observaciones', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['razon_social'],
            },
        ),
        migrations.CreateModel(
            name='OfertaProveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('costo', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('lead_time_dias', models.PositiveIntegerField(default=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('min_lote', models.DecimalField(decimal_places=2, default=1, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('descuento_pct', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('preferente', models.BooleanField(default=False)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofertas_proveedor', to='Panel_Productos.producto')),
                ('proveedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofertas', to='Panel_Proveedores.proveedor')),
            ],
            options={
                'verbose_name': 'Oferta de Proveedor',
                'verbose_name_plural': 'Ofertas de Proveedor',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('descuento_pct__gte', 0), ('descuento_pct__lte', 100)), ('descuento_pct__isnull', True), _connector='OR'), name='oferta_descuento_pct_0_100_or_null'), models.CheckConstraint(condition=models.Q(('costo__gte', 0)), name='oferta_costo_no_negativo'), models.CheckConstraint(condition=models.Q(('min_lote__gt', 0)), name='oferta_min_lote_gt_0')],
                'unique_together': {('producto', 'proveedor')},
            },
        ),
    ]
